[project]
name = "ad_project_api"
version = "0.1.0"
description = "Default template for PDM package"
authors = [
    {name = "David Lefrancq", email = "david.lefrancq@gmail.com"},
]
dependencies = [
    "fastapi>=0.115.5",
    "uvicorn>=0.32.1",
    "numpy>=2.1.3",
    "pandas>=2.2.3",
    "joblib>=1.4.2",
    "scikit-learn>=1.5.2",
    "python-logstash>=0.4.8",
]
requires-python = "==3.11.*"
readme = "README.md"
license = {text = "MIT"}

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"

[tool.pytest.ini_options]
pythonpath = "."

[tool.pdm]
distribution = false

[tool.pdm.scripts]
start = "python src/main.py"
export = {shell = "pdm export -o requirements.txt --without-hashes"}
docker = {shell = "docker buildx build -t ad_project_api . && docker run --publish 8000:80 ad_project_api"}
prepare = {shell = "python src/prepare.py && python src/utils/encoders_values_extractor.py"}
optimize = "python src/optimize.py"
train = "python src/train.py"
client = "python src/client.py"
test = {shell = "python -c \"import datetime; print('Running tests ' + datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')); import os; os.system('pytest tests/test_client_current.py -v --html=report/report-' + datetime.datetime.now().strftime('%Y%m%d_%H%M%S') + '.html --self-contained-html')\""}
testall = {shell = "python -c \"import datetime; print('Running tests ' + datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')); import os; os.system('pytest tests/ -v --html=report/report-' + datetime.datetime.now().strftime('%Y%m%d_%H%M%S') + '.html --self-contained-html')\""}

[dependency-groups]
test = [
    "pytest>=8.3.3",
    "pytest-html>=4.1.1",
    "pytest-sugar>=1.0.0",
    "lightgbm>=4.5.0",
    "matplotlib>=3.9.2",
    "optuna>=4.1.0",
    "seaborn>=0.13.2",
    "xgboost>=2.1.3",
]
